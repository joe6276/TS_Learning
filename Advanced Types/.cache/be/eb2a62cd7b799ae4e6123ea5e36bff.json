{"id":"app.ts","dependencies":[{"name":"C:\\Users\\JonathanNdambuki\\package.json","includedInParent":true,"mtime":1708324969263}],"generated":{"js":"// Intersection type\n//combine different types to come up with a new type\nvar _a;\nfunction add(a, b) {\n  if (typeof a === \"string\" || typeof b === \"string\") {\n    return a.toString() + b.toString();\n  }\n  return a + b;\n}\nvar result = add(13, 12);\n//optional chaining\nvar person = {\n  name: \"john\",\n  job: {\n    title: \"CEO\"\n  }\n};\nvar person1 = {\n  name: \"john\"\n  // job: {\n  //   title: \" \",\n  // },\n};\nconsole.log((_a = person1 === null || person1 === void 0 ? void 0 : person1.job) === null || _a === void 0 ? void 0 : _a.title);\n//Nullish Coalescing\n//check if something is null or undefined\nvar username = null;\nvar storedData = username !== null && username !== void 0 ? username : 'John Doe';\nconsole.log(storedData);"},"sourceMaps":{"js":{"mappings":[{"source":"app.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"app.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"app.ts","name":null,"original":{"line":182,"column":0},"generated":{"line":4,"column":0}},{"source":"app.ts","name":null,"original":{"line":182,"column":9},"generated":{"line":4,"column":9}},{"source":"app.ts","name":null,"original":{"line":182,"column":12},"generated":{"line":4,"column":12}},{"source":"app.ts","name":null,"original":{"line":182,"column":13},"generated":{"line":4,"column":13}},{"source":"app.ts","name":null,"original":{"line":182,"column":22},"generated":{"line":4,"column":14}},{"source":"app.ts","name":null,"original":{"line":182,"column":24},"generated":{"line":4,"column":16}},{"source":"app.ts","name":null,"original":{"line":182,"column":33},"generated":{"line":4,"column":17}},{"source":"app.ts","name":null,"original":{"line":182,"column":33},"generated":{"line":4,"column":19}},{"source":"app.ts","name":null,"original":{"line":183,"column":2},"generated":{"line":5,"column":2}},{"source":"app.ts","name":null,"original":{"line":183,"column":6},"generated":{"line":5,"column":6}},{"source":"app.ts","name":null,"original":{"line":183,"column":13},"generated":{"line":5,"column":13}},{"source":"app.ts","name":null,"original":{"line":183,"column":14},"generated":{"line":5,"column":14}},{"source":"app.ts","name":null,"original":{"line":183,"column":19},"generated":{"line":5,"column":19}},{"source":"app.ts","name":null,"original":{"line":183,"column":27},"generated":{"line":5,"column":27}},{"source":"app.ts","name":null,"original":{"line":183,"column":31},"generated":{"line":5,"column":31}},{"source":"app.ts","name":null,"original":{"line":183,"column":38},"generated":{"line":5,"column":38}},{"source":"app.ts","name":null,"original":{"line":183,"column":39},"generated":{"line":5,"column":39}},{"source":"app.ts","name":null,"original":{"line":183,"column":44},"generated":{"line":5,"column":44}},{"source":"app.ts","name":null,"original":{"line":183,"column":52},"generated":{"line":5,"column":52}},{"source":"app.ts","name":null,"original":{"line":183,"column":54},"generated":{"line":5,"column":54}},{"source":"app.ts","name":null,"original":{"line":184,"column":4},"generated":{"line":6,"column":4}},{"source":"app.ts","name":null,"original":{"line":184,"column":11},"generated":{"line":6,"column":11}},{"source":"app.ts","name":null,"original":{"line":184,"column":12},"generated":{"line":6,"column":12}},{"source":"app.ts","name":null,"original":{"line":184,"column":13},"generated":{"line":6,"column":13}},{"source":"app.ts","name":null,"original":{"line":184,"column":21},"generated":{"line":6,"column":21}},{"source":"app.ts","name":null,"original":{"line":184,"column":21},"generated":{"line":6,"column":22}},{"source":"app.ts","name":null,"original":{"line":184,"column":23},"generated":{"line":6,"column":23}},{"source":"app.ts","name":null,"original":{"line":184,"column":26},"generated":{"line":6,"column":26}},{"source":"app.ts","name":null,"original":{"line":184,"column":27},"generated":{"line":6,"column":27}},{"source":"app.ts","name":null,"original":{"line":184,"column":28},"generated":{"line":6,"column":28}},{"source":"app.ts","name":null,"original":{"line":184,"column":36},"generated":{"line":6,"column":36}},{"source":"app.ts","name":null,"original":{"line":184,"column":36},"generated":{"line":6,"column":37}},{"source":"app.ts","name":null,"original":{"line":184,"column":38},"generated":{"line":6,"column":38}},{"source":"app.ts","name":null,"original":{"line":185,"column":2},"generated":{"line":7,"column":2}},{"source":"app.ts","name":null,"original":{"line":186,"column":2},"generated":{"line":8,"column":2}},{"source":"app.ts","name":null,"original":{"line":186,"column":9},"generated":{"line":8,"column":9}},{"source":"app.ts","name":null,"original":{"line":186,"column":10},"generated":{"line":8,"column":10}},{"source":"app.ts","name":null,"original":{"line":186,"column":13},"generated":{"line":8,"column":13}},{"source":"app.ts","name":null,"original":{"line":186,"column":14},"generated":{"line":8,"column":14}},{"source":"app.ts","name":null,"original":{"line":187,"column":0},"generated":{"line":9,"column":0}},{"source":"app.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":10,"column":0}},{"source":"app.ts","name":null,"original":{"line":189,"column":4},"generated":{"line":10,"column":4}},{"source":"app.ts","name":null,"original":{"line":189,"column":10},"generated":{"line":10,"column":10}},{"source":"app.ts","name":null,"original":{"line":189,"column":13},"generated":{"line":10,"column":13}},{"source":"app.ts","name":null,"original":{"line":189,"column":16},"generated":{"line":10,"column":16}},{"source":"app.ts","name":null,"original":{"line":189,"column":17},"generated":{"line":10,"column":17}},{"source":"app.ts","name":null,"original":{"line":189,"column":19},"generated":{"line":10,"column":19}},{"source":"app.ts","name":null,"original":{"line":189,"column":21},"generated":{"line":10,"column":21}},{"source":"app.ts","name":null,"original":{"line":189,"column":23},"generated":{"line":10,"column":23}},{"source":"app.ts","name":null,"original":{"line":189,"column":24},"generated":{"line":10,"column":24}},{"source":"app.ts","name":null,"original":{"line":191,"column":0},"generated":{"line":11,"column":0}},{"source":"app.ts","name":null,"original":{"line":193,"column":0},"generated":{"line":12,"column":0}},{"source":"app.ts","name":null,"original":{"line":193,"column":4},"generated":{"line":12,"column":4}},{"source":"app.ts","name":null,"original":{"line":193,"column":10},"generated":{"line":12,"column":10}},{"source":"app.ts","name":null,"original":{"line":193,"column":13},"generated":{"line":12,"column":13}},{"source":"app.ts","name":null,"original":{"line":194,"column":2},"generated":{"line":13,"column":2}},{"source":"app.ts","name":null,"original":{"line":194,"column":6},"generated":{"line":13,"column":6}},{"source":"app.ts","name":null,"original":{"line":194,"column":8},"generated":{"line":13,"column":8}},{"source":"app.ts","name":null,"original":{"line":194,"column":14},"generated":{"line":13,"column":14}},{"source":"app.ts","name":null,"original":{"line":195,"column":2},"generated":{"line":14,"column":2}},{"source":"app.ts","name":null,"original":{"line":195,"column":5},"generated":{"line":14,"column":5}},{"source":"app.ts","name":null,"original":{"line":195,"column":7},"generated":{"line":14,"column":7}},{"source":"app.ts","name":null,"original":{"line":196,"column":4},"generated":{"line":15,"column":4}},{"source":"app.ts","name":null,"original":{"line":196,"column":9},"generated":{"line":15,"column":9}},{"source":"app.ts","name":null,"original":{"line":196,"column":11},"generated":{"line":15,"column":11}},{"source":"app.ts","name":null,"original":{"line":198,"column":1},"generated":{"line":17,"column":1}},{"source":"app.ts","name":null,"original":{"line":200,"column":0},"generated":{"line":18,"column":0}},{"source":"app.ts","name":null,"original":{"line":200,"column":4},"generated":{"line":18,"column":4}},{"source":"app.ts","name":null,"original":{"line":200,"column":11},"generated":{"line":18,"column":11}},{"source":"app.ts","name":null,"original":{"line":200,"column":14},"generated":{"line":18,"column":14}},{"source":"app.ts","name":null,"original":{"line":201,"column":4},"generated":{"line":19,"column":2}},{"source":"app.ts","name":null,"original":{"line":201,"column":8},"generated":{"line":19,"column":6}},{"source":"app.ts","name":null,"original":{"line":201,"column":10},"generated":{"line":19,"column":8}},{"source":"app.ts","name":null,"original":{"line":202,"column":4},"generated":{"line":20,"column":2}},{"source":"app.ts","name":null,"original":{"line":203,"column":4},"generated":{"line":21,"column":2}},{"source":"app.ts","name":null,"original":{"line":204,"column":4},"generated":{"line":22,"column":2}},{"source":"app.ts","name":null,"original":{"line":205,"column":3},"generated":{"line":23,"column":1}},{"source":"app.ts","name":null,"original":{"line":207,"column":1},"generated":{"line":24,"column":0}},{"source":"app.ts","name":null,"original":{"line":207,"column":8},"generated":{"line":24,"column":7}},{"source":"app.ts","name":null,"original":{"line":207,"column":9},"generated":{"line":24,"column":8}},{"source":"app.ts","name":null,"original":{"line":207,"column":12},"generated":{"line":24,"column":11}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":12}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":13}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":15}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":18}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":25}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":30}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":34}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":38}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":45}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":50}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":55}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":56}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":59}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":64}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":65}},{"source":"app.ts","name":null,"original":{"line":207,"column":14},"generated":{"line":24,"column":68}},{"source":"app.ts","name":null,"original":{"line":207,"column":21},"generated":{"line":24,"column":75}},{"source":"app.ts","name":null,"original":{"line":207,"column":23},"generated":{"line":24,"column":76}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":79}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":85}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":89}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":93}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":95}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":100}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":105}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":106}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":109}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":114}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":115}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":118}},{"source":"app.ts","name":null,"original":{"line":207,"column":26},"generated":{"line":24,"column":120}},{"source":"app.ts","name":null,"original":{"line":207,"column":28},"generated":{"line":24,"column":121}},{"source":"app.ts","name":null,"original":{"line":207,"column":33},"generated":{"line":24,"column":126}},{"source":"app.ts","name":null,"original":{"line":207,"column":34},"generated":{"line":24,"column":127}},{"source":"app.ts","name":null,"original":{"line":210,"column":1},"generated":{"line":25,"column":0}},{"source":"app.ts","name":null,"original":{"line":211,"column":0},"generated":{"line":26,"column":0}},{"source":"app.ts","name":null,"original":{"line":213,"column":0},"generated":{"line":27,"column":0}},{"source":"app.ts","name":null,"original":{"line":213,"column":4},"generated":{"line":27,"column":4}},{"source":"app.ts","name":null,"original":{"line":213,"column":12},"generated":{"line":27,"column":12}},{"source":"app.ts","name":null,"original":{"line":213,"column":14},"generated":{"line":27,"column":15}},{"source":"app.ts","name":null,"original":{"line":213,"column":18},"generated":{"line":27,"column":19}},{"source":"app.ts","name":null,"original":{"line":215,"column":0},"generated":{"line":28,"column":0}},{"source":"app.ts","name":null,"original":{"line":215,"column":4},"generated":{"line":28,"column":4}},{"source":"app.ts","name":null,"original":{"line":215,"column":14},"generated":{"line":28,"column":14}},{"source":"app.ts","name":null,"original":{"line":215,"column":16},"generated":{"line":28,"column":17}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":25}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":30}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":34}},{"source":"app.ts","name":null,"original":{"line":215,"column":16},"generated":{"line":28,"column":38}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":46}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":51}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":56}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":57}},{"source":"app.ts","name":null,"original":{"line":215,"column":16},"generated":{"line":28,"column":60}},{"source":"app.ts","name":null,"original":{"line":215,"column":24},"generated":{"line":28,"column":68}},{"source":"app.ts","name":null,"original":{"line":215,"column":28},"generated":{"line":28,"column":71}},{"source":"app.ts","name":null,"original":{"line":215,"column":38},"generated":{"line":28,"column":81}},{"source":"app.ts","name":null,"original":{"line":217,"column":0},"generated":{"line":29,"column":0}},{"source":"app.ts","name":null,"original":{"line":217,"column":7},"generated":{"line":29,"column":7}},{"source":"app.ts","name":null,"original":{"line":217,"column":8},"generated":{"line":29,"column":8}},{"source":"app.ts","name":null,"original":{"line":217,"column":11},"generated":{"line":29,"column":11}},{"source":"app.ts","name":null,"original":{"line":217,"column":12},"generated":{"line":29,"column":12}},{"source":"app.ts","name":null,"original":{"line":217,"column":22},"generated":{"line":29,"column":22}},{"source":"app.ts","name":null,"original":{"line":217,"column":23},"generated":{"line":29,"column":23}}],"sources":{"app.ts":"// Intersection type\r\n//combine different types to come up with a new type\r\n\r\n// type User={\r\n//     name:string\r\n//     age:number\r\n// }\r\n// type Manager={\r\n// manages:string[]\r\n// role:string[]\r\n// }\r\n\r\n// type Admin = User & Manager\r\n\r\n// let admin:Admin={\r\n//     name:\"John\",\r\n//     age:20,\r\n//     manages:['jane', 'Doe'],\r\n//     role:['managing']\r\n// }\r\n//intersection for objects adds all the properties together\r\n\r\n//intersection for built in types takes the common type\r\n\r\n// type StrNum= string | number\r\n// type StrBool= string |boolean\r\n\r\n// type combined= StrBool & StrNum //string\r\n\r\n// Type Guards\r\n// Typeof -- check the type\r\n// this only works for built in datatypes\r\n// function add(a:StrNum, b:StrNum){\r\n//     if(typeof a==='string' || typeof b==='string'){\r\n//         return a.toString() + b.toString()\r\n//     }\r\n//     return a+b\r\n// }\r\n\r\n// console.log(add('Hello ', 'World'));\r\n\r\n// console.log(add(12,45));\r\n\r\n// type User = {\r\n//   name: string;\r\n//   age: number;\r\n// };\r\n// type Manager = {\r\n//   name: string;\r\n//   manages: string[];\r\n//   role: string[];\r\n// };\r\n\r\n// type Employee = User | Manager;\r\n//create a function that says if someone is a manager or a normal user\r\n\r\n// in operator\r\n// function printEmployee(emp: Employee) {\r\n//     //we cant use Typeof - they are not built in types\r\n//     if('manages' in emp){\r\n//         // this is a manager\r\n//         console.log(\"You are a Manager\");\r\n//         return\r\n//     }\r\n//     console.log(\"You are a Normal user\");\r\n//     return\r\n// }\r\n\r\n// printEmployee({name:\"John\", manages:[''],role:[]})\r\n\r\n// class Car{\r\n//     drive(){\r\n//         console.log('Driving');\r\n\r\n//     }\r\n// }\r\n\r\n// class Truck{\r\n//     drive(){\r\n//         console.log('Driving');\r\n\r\n//     }\r\n//     loadCargo(){\r\n//         console.log(\"Carrying 1T cargo..\");\r\n\r\n//     }\r\n// }\r\n\r\n// type Vehicle= Car |Truck\r\n\r\n// // Instance of\r\n// //used with classes\r\n\r\n// function checkVehicle(vehicle:Vehicle){\r\n\r\n//     vehicle.drive()\r\n\r\n//     if (vehicle instanceof Truck){// there might be  a typo\r\n//         vehicle.loadCargo()\r\n//     }\r\n// }\r\n\r\n// checkVehicle(new Truck())\r\n\r\n// type User = {\r\n//     name: string;\r\n//     age: number;\r\n//     role:'User'\r\n//   };\r\n//   type Manager = {\r\n//     name: string;\r\n//     manages: string[];\r\n//     role: 'Admin';\r\n//   };\r\n\r\n//   type Employee = User | Manager;\r\n\r\n//   //Discriminated Unions\r\n//   // the two types must have a common property\r\n\r\n//   function checkEmployee(emp:Employee){\r\n//     switch(emp.role){\r\n//         case\"User\":\r\n//         console.log(\"This is a Normal user\")\r\n//         break\r\n\r\n//         case \"Admin\":\r\n//             console.log(\"This is an Admin\");\r\n//             return\r\n//     }\r\n//   }\r\n\r\n//   checkEmployee({name:'', age:23, role:\"User\"})\r\n\r\n//Type Casting\r\n\r\n// const p = document.querySelector('p')!\r\n\r\n// p.style.display=\"\"\r\n\r\n// const p1= <HTMLParagraphElement>document.querySelector('#message')!\r\n// //downside -React JS\r\n// // <> as an Element/Component\r\n\r\n// const inputText= document.querySelector('#text')\r\n\r\n// if(inputText){\r\n//     (inputText as HTMLInputElement).value\r\n// }\r\n\r\n// const btn = document.getElementById(\"btn\")! as HTMLButtonElement\r\n\r\n// btn.addEventListener('click',()=>{\r\n\r\n// })\r\n\r\n// indexing Property\r\n// {username:'username is taken'}\r\n// {username:'username is taken', email:'email is required'}\r\n\r\n// type ErrorContainer={\r\n//     [j:string]:string|number\r\n// }\r\n\r\n// let errors:ErrorContainer={\r\n//     username:'username is taken',\r\n//     email:'email is required'\r\n// }\r\n\r\n// let errors1:ErrorContainer={\r\n//     username:'username is taken'\r\n// }\r\n\r\n//function overloading\r\n\r\ntype StrNum = string | number;\r\n\r\nfunction add(a: string, b: string): string;\r\nfunction add(a: number, b: string): string;\r\nfunction add(a: string, b: number): string;\r\nfunction add(a: number, b: number): number;\r\nfunction add(a: StrNum, b: StrNum) {\r\n  if (typeof a === \"string\" || typeof b === \"string\") {\r\n    return a.toString() + b.toString();\r\n  }\r\n  return a + b;\r\n}\r\n\r\nvar result = add(13, 12);\r\n\r\n//optional chaining\r\n\r\nlet person = {\r\n  name: \"john\",\r\n  job: {\r\n    title: \"CEO\",\r\n  },\r\n};\r\n\r\nlet person1 = {\r\n    name: \"john\",\r\n    // job: {\r\n    //   title: \" \",\r\n    // },\r\n  };\r\n\r\n console.log( person1?.job?.title);\r\n\r\n\r\n //Nullish Coalescing\r\n//check if something is null or undefined\r\n\r\nlet username =null\r\n\r\nlet storedData= username ?? 'John Doe'\r\n\r\nconsole.log(storedData);\r\n\r\n\r\n \r\n\r\n\r\n"},"lineCount":null}},"error":null,"hash":"b6c2be02f01810eb621027e27272a49c","cacheData":{"env":{}}}